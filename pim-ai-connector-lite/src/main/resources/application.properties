spring.profiles.active=dev
server.port=8080
google.vision.api-key=${GOOGLE_VISION_API_KEY}

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.resolve-lazily=true

logging.level.org.springframework.web=DEBUG

# Aktiver Produkttyp aus .env-Datei lesen
ACTIVE_PRODUKTTYP_ID=${ACTIVE_PRODUKTTYP_ID:fashion}

# Sprachkonfiguration
API_LANGUAGE=${API_LANGUAGE:de}

# API-Key-Konfiguration
API_KEY=${API_KEY:demo-key}
ENABLE_API_KEY=${ENABLE_API_KEY:true}

WEB_DOMAIN=${WEB_DOMAIN:localhost}

# Statische Ressourcen aktivieren - erweiterte Konfiguration
spring.mvc.static-path-pattern=/**
spring.web.resources.static-locations=classpath:/static/,classpath:/public/,classpath:/resources/,classpath:/META-INF/resources/,classpath:/

# Zusätzliche Konfiguration für die Ressourcenhandhabung
spring.web.resources.add-mappings=true

# Direkter Zugriff auf die pim-config.xml erlauben
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

# Disable JPA and Flyway
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration